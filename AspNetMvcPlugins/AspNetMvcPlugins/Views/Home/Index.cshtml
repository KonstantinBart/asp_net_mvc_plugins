@using Domain.Common;
@model Domain.Core.SearchParameters

@{
    ViewBag.Title = "Index";
}

<div class="container">
    @using (Ajax.BeginForm(null))
    {
        @Html.ValidationSummary()
                                    
        <p>Выбрать: @Html.TextBoxFor(x => x.FolderPath)</p>
        <p>@Html.CheckBoxFor(x => x.IsSearchInSubfolders) Поиск в подкаталогах</p>
        <p>Размер:</p>
        <p>не более: @Html.TextBoxFor(x => x.FileLength) Кб</p>
        <p>Дата:</p>
        <p>создан ранее: @Html.TextBoxFor(x => x.CreationDate, new { @type = "date", @Value = Model.CreationDate.ToString("yyyy-MM-dd") })</p>
        <p>Атрибуты:</p>
        <div>
            @for (int i = 0; i < Model.FileAttributes.Count(); i++)
            { 
                <div class="checkbox-inline">
                    @Html.CheckBoxFor(m => Model.FileAttributes[i].IsChecked)
                    @Model.FileAttributes[i].Text
                    @Html.HiddenFor(m => Model.FileAttributes[i].Text)
                    @Html.HiddenFor(m => Model.FileAttributes[i].Value)
                </div>
            }
        </div>
        <hr />
        <div class="form-group">Расширенный поиск:</div>
        <div>
            @Html.DropDownList("SelectedPluginModule", ViewBag.ModulesDropDown as IEnumerable<SelectListItem>, new { @id = "SelectedPluginModule", @class = "selectpicker", data_style = "btn-inverse" })
            <div id="linkResults"></div>
            <div id="results"></div>
        </div>
        <hr />
        
        <input type="button" class="btn btn-default" id="sendAjax" value="Поиск" onclick="getData()" />
        <input type="button" class="btn btn-default" id="cancelButton" value="Отменить поиск" onclick="cancelSearch()" />
        <br />
    }
    <div id="resultsDiv"></div>
</div>
@section scripts{
    <script>

        //Действие при изменении выбора в выпадающем списке модулей
        $('#SelectedPluginModule').change(function () {
            var selectedModule = $(this);
            var ddl = $("#linkResults");
            ddl.empty();
            $('#results').empty();
            if (selectedModule.val() != "") {
                var selectedText = selectedModule.find("option:selected").text();
                var selectedRefFull = selectedText;
                var selectedRef = selectedRefFull.substring(0, 3);
                ddl.append("Настроить модуль для файлов: " + selectedModule.val());
                ddl.append('<a id="link" style="visibility:hidden;" data-ajax="true" data-ajax-mode="replace" data-ajax-update="#results" href="/' + selectedRef + '" title="' + selectedText + '">Настроить модуль для файлов ' + selectedModule.val() + '</a>');
                $("#link").click();
            }
        });

        //Получение количества файлов и поиск по ним.
        function getData() {
            $('#sendAjax').prop("disabled", true)
            var form = $("#form0");
            var url = '@Url.Action("GetFilesCount")';
            var filesCount;
            $.post(url, form.serialize(), function (data) {
                filesCount = parseInt(data);
                getDataByNumber(filesCount);
            });

        }

        var stopAction = false;
        //Поиск по файлам.
        function getDataByNumber(filesCount) {
            stopAction = false;
            var outputDiv = $('#resultsDiv');
            outputDiv.empty();
            outputDiv.append('<div class="counter">Найдено: </div><div id="elementsCount" class="counter"></div>');
            outputDiv.append('<div><ul id="elementsList"></ul></div>');

            var form = $("#form0");
            var url = '@Url.Action("Find")';
            var formData = form.serialize();
            var factCount = 0;

            for (var i = 0; i < filesCount; i++) {
                if (stopAction === true) {
                    $("#sendAjax").prop('disabled', false);
                    return;
                }

                $.post(url, formData + "&number=" + i, function (data) {
                    if (data != "") {
                        factCount++;
                        $("#elementsCount").empty();
                        $("#elementsCount").append(factCount);
                        $("#elementsList").append('<li>' + data + '</li>');
                    }
                });
            }

            $('#sendAjax').prop("disabled", false);
        }

        //Отмена поиска (не останавливает поиск.)
        function cancelSearch() {
            stopAction = true;
        }

        var timer = setInterval(updateDiv, 5000);
        //Обновление выпадающего списка модулей.
        function updateDiv() {
            var url = '@Url.Action("RefreshModules")';
            var ddl = $("#SelectedPluginModule");

            $.getJSON(url, { selectedValue: ddl.val() }, function (response) {
                ddl.empty();
                $.each(response, function (index, item) {
                    ddl.append($('<option></option>').val(item.Value).html(item.Text).prop('selected', item.Selected))
                });
            });
        }
    </script>
}